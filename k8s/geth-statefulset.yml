apiVersion: v1
kind: ConfigMap
metadata:
  name: jwt-secret
  namespace: ethereum
data:
  # Generate JWT secret: openssl rand -hex 32
  secret: "aced7325ad6f01b0f5a405ac1b04f9fbd768e9d382e953c5bb25487dd874f443"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: geth
  namespace: ethereum
  labels:
    app: geth
spec:
  serviceName: geth
  replicas: 1
  selector:
    matchLabels:
      app: geth
  template:
    metadata:
      labels:
        app: geth
    spec:
      enableServiceLinks: false
      containers:
      - name: geth
        image: ethereum/client-go:latest
        ports:
        - containerPort: 8545
          name: http-rpc
        - containerPort: 8546
          name: ws-rpc
        - containerPort: 30303
          name: p2p
        - containerPort: 8551
          name: auth-rpc
        - containerPort: 6060
          name: metrics
        volumeMounts:
        - name: geth-data
          mountPath: /root/.ethereum
        - name: jwt-secret
          mountPath: /root/jwt
          readOnly: true
        command:
        - geth
        args:
        - --sepolia
        - --syncmode=snap
        - --http
        - --http.addr=0.0.0.0
        - --http.port=8545
        - --http.corsdomain=*
        - --http.vhosts=*
        - --http.api=eth,net,web3
        - --ws
        - --ws.addr=0.0.0.0
        - --ws.port=8546
        - --ws.api=eth,net,web3
        - --cache=1024
        - --maxpeers=50
        - --metrics
        - --metrics.addr=0.0.0.0
        - --metrics.port=6060
        - --authrpc.addr=0.0.0.0
        - --authrpc.port=8551
        - --authrpc.vhosts=*
        - --authrpc.jwtsecret=/root/jwt/secret
        livenessProbe:
          httpGet:
            path: /
            port: 8545
          initialDelaySeconds: 180
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8545
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "4Gi"
            cpu: "1000m"
          limits:
            memory: "8Gi"
            cpu: "2000m"
      volumes:
      - name: jwt-secret
        configMap:
          name: jwt-secret
  volumeClaimTemplates:
  - metadata:
      name: geth-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: standard-rwo
      resources:
        requests:
          storage: 100Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lighthouse
  namespace: ethereum
  labels:
    app: lighthouse
spec:
  serviceName: lighthouse
  replicas: 1
  selector:
    matchLabels:
      app: lighthouse
  template:
    metadata:
      labels:
        app: lighthouse
    spec:
      enableServiceLinks: false
      containers:
      - name: lighthouse
        image: sigp/lighthouse:latest
        ports:
        - containerPort: 9000
          name: p2p
        - containerPort: 5052
          name: http-api
        volumeMounts:
        - name: lighthouse-data
          mountPath: /root/.lighthouse
        - name: jwt-secret
          mountPath: /root/jwt
          readOnly: true
        command:
        - lighthouse
        args:
        - bn
        - --network=sepolia
        - --execution-endpoint=http://geth-0.geth.ethereum.svc.cluster.local:8551
        - --execution-jwt=/root/jwt/secret
        - --checkpoint-sync-url=https://sepolia.beaconstate.info
        - --http
        - --metrics
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "1000m"
      volumes:
      - name: jwt-secret
        configMap:
          name: jwt-secret
  volumeClaimTemplates:
  - metadata:
      name: lighthouse-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: standard-rwo
      resources:
        requests:
          storage: 100Gi
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: geth-vpa
  namespace: ethereum
spec:
  targetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: geth
  updatePolicy:
    updateMode: "Auto"  # Automatically restart pods with new resources
  resourcePolicy:
    containerPolicies:
    - containerName: geth
      minAllowed:
        cpu: 500m
        memory: 2Gi
      maxAllowed:
        cpu: 8000m      # 8 CPU cores max
        memory: 32Gi    # 32GB RAM max
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: lighthouse-vpa
  namespace: ethereum
spec:
  targetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: lighthouse
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: lighthouse
      minAllowed:
        cpu: 250m
        memory: 1Gi
      maxAllowed:
        cpu: 4000m      # 4 CPU cores max
        memory: 16Gi    # 16GB RAM max
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits
---
